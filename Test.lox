/*class Node {
  init(val, next) {
    this.val = val;
    this.next = next;
  }
}


class LinkedList {
  init() {
    this.head = Node(-1, nil);
    this.tail = this.head;
  }

  append(val) {
    this.tail.next = Node(val, nil);
    this.tail = this.tail.next;
  }

  traverse() {
    var head = this.head;
    var tail = this.tail;

    if (head.next == nil) {
      print "Empty list.";
      return;
    }

    head = head.next;
    while (head != tail.next) {
      print head.val;
      head = head.next;
    }
  }
}

class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream < Doughnut {
  cook() {
    super.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}

BostonCream().cook();


var l = LinkedList();
l.append("1");
l.append("2");
l.traverse();


fun fib(n) {
  if (n < 2) return n;
  return fib(n - 1) + fib(n - 2); 
}

var before = clock();
print fib(40);
var after = clock();
print after - before;

*/


/*
var a = 1;
if (a == 2) {
  print "Triggered in then branch";
} else {
  print "Triggered in else branch";
}
*/



for (var i = 0; i < 5; i = i + 1) {
  print "Triggered in for loop with index";
  print i;

  var b = 2;
  while (b > 0) {
    print b;
    b = b - 1;
  }
}